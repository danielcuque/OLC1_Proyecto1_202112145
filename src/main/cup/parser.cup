package com.daniel;

import java_cup.runtime.*;

terminal String CONJ, LBRACE, RBRACE, COLON, ARROW, PERCENT, DOT, STAR, PLUS;
terminal String QUERY, PIPE, AMPERSAND, TILDE, COMMA, SEMICOLON;
terminal String LOWERCASE, UPPERCASE, IDENTIFIER, DIGIT, STRING_LITERAL,ASCII;

non terminal Begin, BodyEntry;
non terminal ConjBody, ConjDef, ConjNotation, ConjMark;
non terminal RangeExp, IndExp, MoreIndExp;
non terminal UnitSymbol;
non terminal CheckBody, CheckLine, CheckNotation, CheckMark;

non terminal ExpBody, ExpLine, RegExp;

start with Begin;

// Definimos la sección para la declaración de la gramática
Begin ::=LBRACE BodyEntry RBRACE {: System.out.println("Inicio"); :};

BodyEntry ::= ConjBody ExpBody PERCENT CheckBody;

// Definimos la sección para los conjuntos de regex
ConjBody ::= ConjDef ConjBody | ConjDef;

ConjDef ::= CONJ COLON IDENTIFIER ARROW ConjNotation SEMICOLON;

ConjNotation ::= RangeExp | IndExp;

RangeExp ::= LOWERCASE TILDE LOWERCASE | UPPERCASE TILDE UPPERCASE | DIGIT TILDE DIGIT | ASCII TILDE ASCII;

IndExp ::=  UnitSymbol MoreIndExp | UnitSymbol;

MoreIndExp ::= COMMA UnitSymbol MoreIndExp | COMMA UnitSymbol;

UnitSymbol ::= LOWERCASE | UPPERCASE | DIGIT | ASCII;

// Definimos la sección para la asignación de expresiones regulares a conjuntos
ExpBody ::= ExpLine ExpBody | ExpLine;

ExpLine ::= IDENTIFIER:id ARROW RegExp SEMICOLON {:
System.out.println("Expresión regular: " + id);
:};

RegExp ::= PIPE RegExp RegExp
| DOT RegExp RegExp
| PLUS RegExp
| STAR RegExp
| QUERY RegExp
| LBRACE IDENTIFIER RBRACE | STRING_LITERAL;


// Definimos la sección para las cadenas a evaluar
CheckBody ::= CheckLine CheckBody | CheckLine;

CheckLine ::= IDENTIFIER COLON STRING_LITERAL SEMICOLON;



